{
  "name": "qrcode",
  "description": "QRCode / 2d Barcode api with both server side and client side support using canvas",
  "version": "0.2.2",
  "author": {
    "name": "Ryan Day",
    "email": "soldair@gmail.com"
  },
  "keywords": [
    "canvas",
    "qrcode",
    "barcode"
  ],
  "main": "./qrcode.js",
  "homepage": "http://github.com/soldair/node-qrcode",
  "scripts": {
    "pretest": "node build.js",
    "prepublish": "node build.js",
    "test": "./test.sh"
  },
  "bin": {
    "qrcode": "./bin/qrcode"
  },
  "dependencies": {
    "canvas": ">= 0.4.3",
    "colors": "*"
  },
  "devDependencies": {
    "express": "2.5.x",
    "browserify": "1.9.x",
    "uglify-js": "1.2.x"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/soldair/node-qrcode.git"
  },
  "engines": {
    "node": ">=0.2.3"
  },
  "readme": "node-qrcode\n===========\n\n\nThis is a server side QR code / 2d barcode generator.\nit is an extension of \"QRCode for JavaScript\" which Kazuhiko Arase thankfully mit licensed\n\nthe qrcode-draw.js can be used  directly as a client side lib if its appended too or included with lib/qrcode.js\nto use this on the server side please require('qrcode'); =)\n\nexamples\n--------\nsimple test\n\n\tvar QRCode = require('qrcode');\n\n\tQRCode.toDataURL('i am a pony!',function(err,url){\n\t\tconsole.log(url);\n\t});\n\nin your shell if you install globally\n\n\tqrcode \"hi i want a qrcode\"\n\nqr code capacity.\n-----------------\n\nthis libary can encode a string up to lengths:\n2953 in error correct level L\n2331 in error correct level M\n1663 in error correct level Q\n1273 in error correct level h\n\nthe default is H. \nIt can now be changed in an ugly way that wont be supported for more then another few days if you really need to.\nalso the default module size at qr version 40 is really too small for the camera on my Nexus 1 and to make it larger i run out of screen to show it. At 40 the barcode scanner even finds random UPC 1d barcodes in the mass of little squares.\nthe default module size cannot be changed through the public api at this time.\n\ninstall\n-------\n\n\tnpm install qrcode\n\n\tto use qrcode from the command line to save  qrcode images or generate ones you can view in your termial\n\n\tnpm install -g qrcode \n\napi\n---\n\tQRCode.draw(text,cb(error,canvas));\n\t\treturns node canvas object see https://github.com/LearnBoost/node-canvas for all of the cool node things you can do\n\t\tlook up the canvas api for the other cool things\n\n\tQRCode.toDataURL(text,cb(error,dataURL));\n\t\treturns mime image/png data url for the 2d barcode \n\n\tQRCode.save(path,text,cb(error,written));\n\t\tsaves png to the path specified returns bytes written\n\n\tQRCode.drawText(text,cb)\n\t\treturns an ascii representation of the qrcode using unicode characters and ansi control codes for background control.\n\n\tQRCode.drawBitArray(text,cb(error,bits,width));\n\t\treturns an array with each value being either 0 light or 1 dark and the width of each row.\n\t\tthis is enough info to render a qrcode any way you want =)\n\n\t\n\nfor server use:\nsee tests/server.js\n\nfor client side use:\nopen tests/clientside.html in your browser\nor run tests/clientsideserver.js\nyes, it really works in the browser. new browsers but yeah it works.\nfor bad ones perhaps try excanvas?\n\ndependencies\n------------\nthese should be taken care of for you by npm but you should\n\n\tnpm install canvas\n\nif cairo gives you trouble and you cannot install canvas checkout the canvas site i know tj has setup a way to download and install a version of cairo/pixman for testing.\n\nThe word \"QR Code\" is registered trademark of \nDENSO WAVE INCORPORATED\n",
  "_id": "qrcode@0.2.2",
  "_from": "qrcode"
}
